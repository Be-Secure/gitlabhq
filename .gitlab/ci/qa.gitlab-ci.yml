.qa-job-base:
  image: ${REGISTRY_HOST}/${REGISTRY_GROUP}/gitlab-build-images/debian-${DEBIAN_VERSION}-ruby-${RUBY_VERSION}:bundler-2.3-chrome-${CHROME_VERSION}-docker-${DOCKER_VERSION}
  extends:
    - .default-retry
    - .qa-cache
  stage: test
  needs: []
  variables:
    USE_BUNDLE_INSTALL: "false"
    SETUP_DB: "false"
  before_script:
    - !reference [.default-before_script, before_script]
    - cd qa && bundle install

.e2e-trigger-base:
  extends: .production  # this makes sure GITLAB_ALLOW_SEPARATE_CI_DATABASE is passed to the child pipeline
  stage: qa
  needs:
    - build-assets-image
    - build-qa-image
    - e2e-test-pipeline-generate
  variables:
    # This is needed by `trigger-omnibus-env` (`.gitlab/ci/package-and-test/main.gitlab-ci.yml`).
    PARENT_PIPELINE_ID: $CI_PIPELINE_ID
    SKIP_MESSAGE: Skipping package-and-test due to mr containing only quarantine changes!
    GITLAB_QA_IMAGE: "${CI_REGISTRY_IMAGE}/gitlab-ee-qa:${CI_COMMIT_SHA}"
    RUN_WITH_BUNDLE: "true"  # instructs pipeline to install and run gitlab-qa gem via bundler
    QA_PATH: qa  # sets the optional path for bundler to run from
    DYNAMIC_PIPELINE_YML: package-and-test-pipeline.yml  # yml files are generated by scripts/generate-e2e-pipeline script
    EXTRA_GITLAB_QA_OPTS: --set-feature-flags super_sidebar_nav_enrolled=enabled
  inherit:
    variables:
      - CHROME_VERSION
      - RUBY_VERSION
      - DOCKER_VERSION
      - DEBIAN_VERSION
      - REGISTRY_GROUP
      - REGISTRY_HOST
      - OMNIBUS_GITLAB_CACHE_EDITION
      - OMNIBUS_GITLAB_RUBY3_BUILD
      - OMNIBUS_GITLAB_RUBY2_BUILD
  trigger:
    strategy: depend
    forward:
      yaml_variables: true
      pipeline_variables: true
    include:
      - artifact: $DYNAMIC_PIPELINE_YML
        job: e2e-test-pipeline-generate

qa:internal:
  extends:
    - .qa-job-base
    - .qa:rules:internal
  script:
    - bundle exec rspec -O .rspec_internal

qa:internal-as-if-foss:
  extends:
    - qa:internal
    - .qa:rules:internal-as-if-foss
    - .as-if-foss

qa:master-auto-quarantine-dequarantine:
  extends:
    - .qa-job-base
  rules:
    - if: '$QA_TRIGGER_AUTO_QUARANTINE =~ /true|yes|1/i'
  script:
    - bundle exec confiner -r .confiner/master.yml
  allow_failure: true

qa:update-qa-cache:
  extends:
    - .qa-job-base
    - .qa-cache-push
    - .shared:rules:update-cache
  stage: prepare
  script:
    - echo "Cache has been updated and ready to be uploaded."

trigger-omnibus:
  stage: qa
  extends:
    - .qa:rules:trigger-omnibus
  needs:
    - trigger-omnibus-env
    - build-assets-image
  inherit:
    variables: false
  variables:
    GITALY_SERVER_VERSION: $GITALY_SERVER_VERSION
    GITLAB_ELASTICSEARCH_INDEXER_VERSION: $GITLAB_ELASTICSEARCH_INDEXER_VERSION
    GITLAB_KAS_VERSION: $GITLAB_KAS_VERSION
    GITLAB_METRICS_EXPORTER_VERSION: $GITLAB_METRICS_EXPORTER_VERSION
    GITLAB_PAGES_VERSION: $GITLAB_PAGES_VERSION
    GITLAB_SHELL_VERSION: $GITLAB_SHELL_VERSION
    GITLAB_WORKHORSE_VERSION: $GITLAB_WORKHORSE_VERSION
    GITLAB_VERSION: $CI_COMMIT_SHA
    GITLAB_ASSETS_TAG: $GITLAB_ASSETS_TAG
    IMAGE_TAG: $CI_COMMIT_SHA
    TOP_UPSTREAM_SOURCE_PROJECT: $CI_PROJECT_PATH
    SECURITY_SOURCES: $SECURITY_SOURCES
    CACHE_UPDATE: $OMNIBUS_GITLAB_CACHE_UPDATE
    RUBY3_BUILD: $OMNIBUS_GITLAB_RUBY3_BUILD
    RUBY2_BUILD: $OMNIBUS_GITLAB_RUBY2_BUILD
    CACHE_EDITION: $OMNIBUS_GITLAB_CACHE_EDITION
    BUILD_ON_ALL_OS: $OMNIBUS_GITLAB_BUILD_ON_ALL_OS
    SKIP_QA_TEST: "true"
    ee: $EE
  trigger:
    project: gitlab-org/build/omnibus-gitlab-mirror
    branch: $TRIGGER_BRANCH
    strategy: depend

trigger-omnibus as-if-foss:
  extends:
    - trigger-omnibus
    - .qa:rules:trigger-omnibus-ce
  needs:
    - trigger-omnibus-env as-if-foss
    - build-assets-image as-if-foss
  variables:
    # Override gitlab repository so that omnibus doesn't use foss repository for CE build
    GITLAB_ALTERNATIVE_REPO: $CI_PROJECT_URL

e2e:package-and-test-ee:
  extends:
    - .e2e-trigger-base
    - .qa:rules:package-and-test-ee
  needs:
    - build-qa-image
    - trigger-omnibus
    - e2e-test-pipeline-generate
  variables:
    RELEASE: "${REGISTRY_HOST}/${REGISTRY_GROUP}/build/omnibus-gitlab-mirror/gitlab-ee:${CI_COMMIT_SHA}"
    QA_RUN_TYPE: e2e-package-and-test
    ALLURE_JOB_NAME: e2e-package-and-test
    PIPELINE_NAME: E2E Omnibus GitLab EE

e2e:package-and-test-ce:
  extends:
    - e2e:package-and-test-ee
    - .qa:rules:package-and-test-ce
  needs:
    - build-qa-image as-if-foss
    - trigger-omnibus as-if-foss
    - e2e-test-pipeline-generate
  variables:
    FOSS_ONLY: "1"
    RELEASE: ${REGISTRY_HOST}/${REGISTRY_GROUP}/build/omnibus-gitlab-mirror/gitlab-ce:${CI_COMMIT_SHA}
    GITLAB_QA_IMAGE: ${CI_REGISTRY_IMAGE}/gitlab-ce-qa:${CI_COMMIT_SHA}
    QA_RUN_TYPE: e2e-package-and-test-ce
    ALLURE_JOB_NAME: e2e-package-and-test-ce
    PIPELINE_NAME: E2E Omnibus GitLab CE

e2e:package-and-test-old-nav:
  extends:
    - .e2e-trigger-base
    - .qa:rules:package-and-test-old-nav
  variables:
    RELEASE: "${REGISTRY_HOST}/${REGISTRY_GROUP}/build/omnibus-gitlab-mirror/gitlab-ee:${CI_COMMIT_SHA}"
    QA_RUN_TYPE: e2e-package-and-test-old-nav
    ALLURE_JOB_NAME: e2e-package-and-test-old-nav
    PIPELINE_NAME: E2E Omnibus Old Navigation
    QA_SUPER_SIDEBAR_ENABLED: "false"
    EXTRA_GITLAB_QA_OPTS: ""

e2e:package-and-test-nightly:
  extends:
    - .e2e-trigger-base
    - .qa:rules:package-and-test-nightly
  needs:
    - build-qa-image
    - trigger-omnibus
    - e2e-test-pipeline-generate
  variables:
    GITLAB_SEMVER_VERSION: $GITLAB_SEMVER_VERSION
    QA_RUN_TYPE: nightly
    ALLURE_JOB_NAME: nightly
    PIPELINE_NAME: E2E Omnibus GitLab Nightly
    DYNAMIC_PIPELINE_YML: package-and-test-nightly-pipeline.yml
