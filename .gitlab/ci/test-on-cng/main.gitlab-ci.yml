# This pipeline runs E2E tests against CNG build which is deployed via helm chart on a job local kind kubernetes cluster

include:
  - local: .gitlab/ci/cng/main.gitlab-ci.yml
  - local: .gitlab/ci/qa-common/main.gitlab-ci.yml
  - local: .gitlab/ci/qa-common/variables.gitlab-ci.yml
  - local: .gitlab/ci/qa-common/rules.gitlab-ci.yml

workflow:
  rules:
    - when: always

.cng-base:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images/${BUILD_OS}-${OS_VERSION}-ruby-${RUBY_VERSION}:bundler-${BUNDLER_VERSION}-chrome-${CHROME_VERSION}-docker-${DOCKER_VERSION}-kubectl-1.23-helm-3.14-kind-0.20
  stage: test
  extends: .qa-cache
  needs: [build-cng]
  tags: [saas-linux-2xlarge-amd64]
  services:
    - docker:${DOCKER_VERSION}-dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    FF_NETWORK_PER_BUILD: "true"
    NAMESPACE: gitlab
    KUBECONFIG: /root/.kube/config
    BUNDLE_WITHOUT: development
    GITLAB_USERNAME: root
    GITLAB_PASSWORD: 5iveL!fe
    GITLAB_ADMIN_USERNAME: root
    GITLAB_ADMIN_PASSWORD: 5iveL!fe
    GITLAB_QA_ADMIN_ACCESS_TOKEN: $QA_ADMIN_ACCESS_TOKEN
    QA_DOCKER_NETWORK: host
    QA_GENERATE_ALLURE_REPORT: "true"
    QA_CAN_TEST_PRAEFECT: "false"
    QA_SUITE_STATUS_ENV_FILE: $CI_PROJECT_DIR/suite_status.env
  before_script:
    - echo "SUITE_RAN=true" > "$QA_SUITE_STATUS_ENV_FILE"
    - export GITLAB_DOMAIN="$(getent hosts docker | awk '{ print $1 }' | head -n1).nip.io"
    - export QA_GITLAB_URL="http://gitlab.${GITLAB_DOMAIN}"
    - source scripts/qa/cng_deploy/cng-kind.sh
    - setup_cluster "scripts/qa/cng_deploy/config/kind-config.yml"
    - deploy "${GITLAB_DOMAIN}"
    - cd qa && bundle install
  script:
    - export QA_COMMAND="bundle exec bin/qa ${QA_SCENARIO:=Test::Instance::All} $QA_GITLAB_URL -- $QA_TESTS --force-color --order random --format documentation --format RspecJunitFormatter --out tmp/rspec-${CI_JOB_ID}.xml"
    - echo "Running - '$QA_COMMAND'"
    - eval "$QA_COMMAND"
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "failed" ]; then
        echo "SUITE_FAILED=true" >> "$QA_SUITE_STATUS_ENV_FILE"
      fi
    - source scripts/qa/cng_deploy/cng-kind.sh
    - echo -e "\e[0Ksection_start:`date +%s`:log_deploy[collapsed=true]\r\e[0KDeployment info"
    - save_install_logs
    - echo -e "\e[0Ksection_end:`date +%s`:log_deploy\r\e[0K"
  artifacts:
    expire_in: 1 day
    when: always
    reports:
      junit: qa/tmp/rspec-*.xml
      dotenv: $QA_SUITE_STATUS_ENV_FILE
    paths:
      - "*.log"
      - qa/tmp/test-metrics-*.json
      - qa/tmp/allure-results

# ==========================================
# Pre stage
# ==========================================
build-cng-env:
  stage: .pre
  extends: .build-cng-env

build-cng:
  stage: .pre
  extends: .build-cng
  needs: [build-cng-env]

# ==========================================
# Test stage
# ==========================================
cng-qa-smoke:
  extends:
    - .cng-base
  variables:
    QA_SCENARIO: Test::Instance::Smoke

# Test run against environment with minimum supported redis version defined in lib/system_check/app/redis_version_check.rb
cng-qa-min-redis-version:
  extends: cng-qa-smoke
  variables:
    REDIS_VERSION_TYPE: MIN_REDIS_VERSION

# ==========================================
# Post test stage
# ==========================================
e2e-test-report:
  extends: .rules:report:allure-report
  variables:
    ALLURE_REPORT_RESULTS_GLOB: "qa/tmp/allure-results"

export-test-metrics:
  extends:
    - .export-test-metrics
    - .rules:report:process-results
  variables:
    QA_METRICS_REPORT_FILE_PATTERN: $CI_PROJECT_DIR/qa/tmp/test-metrics-*.json

notify-slack:
  extends:
    - .notify-slack
    - .rules:report:process-results
  variables:
    QA_RSPEC_XML_FILE_PATTERN: $CI_PROJECT_DIR/qa/tmp/rspec-*.xml
